---
title: 'EDA: Dominican Real Estate Market'
output:
  html_document:
    df_print: paged
---

## Introduction

For this analysis, we will examine the effect that area (measured in squared meters) has on the value of apartment, for residential use, in Santo Domingo, Domincan Republic. Prices and apartment's characteristics are collect via web scraping. Specifically, data were retrieved on 22nd of march, 2022, from supercasas.com, a beacon on the online dominican real estate market.

## Loading the training dataset

Let's start by loading the libraries and the dataset to be used here. I already cleaned the data by detecting and removing outliers, and performed some initial feature engineering on it. Now, I have to a bit deeper analyzing each feature and how they relate to each other.

```{r}
rm(list = ls())
options(scipen = 99)

library(tidyverse)

training <- read_csv("../../1_Data Cleaning/1_data/training_set.csv")
```

## Reviewing the dataset

Let's start by review the dataset. It contains 20 features for 2,749 observations. Of these 20 features, only `area`, `price`, `parking`, `bedrooms`, `bathrooms`, `price_per_m2` and `area_per_br` are numerical. All others are categorial, such as `status` and `lift`.

```{r}
glimpse(training)
```

## Univariate analysis

So, let's calculate some descriptive statistics on these. For this, I used `pastec` library. it includes a nice function that calculates the number of observations, number of null values, mean, and some other statistics that can give me an idea on these features.

```{r}
myvars <- c("price", "area", "parking", "bedrooms", "bathrooms", "price_per_m2",
            "area_per_br")
pastecs::stat.desc(training[myvars], norm = TRUE)
pairs(training[myvars])
```

The mean and median for `price`, `price_per_m2`, `area_per_br` and `area` look substantially different, and not so much for the other variables. This suggests that they might not follow a normal distribution as shown in the cleaning process. Let's plot the histogram for all numerical variables.

```{r}
g <- ggplot(training)
g + geom_histogram(aes(price))
g + geom_histogram(aes(area))
g + geom_histogram(aes(parking))
g + geom_histogram(aes(bedrooms))
g + geom_histogram(aes(bathrooms))
g + geom_histogram(aes(price_per_m2))
g + geom_histogram(aes(area_per_br))
```

So, `price` and `area` are right-skewed, and so are the calculated features `price_per_m2` and `area_per_br`.

From the previous plots, it is evident that `parking`, `bedrooms`, and `bathrooms` are categorical, despite initial impressions.

## Bivariate analysis

```{r}
ggplot(training, aes(area, price)) +
  geom_point()
```

```{r}
# Viewing how prices changes as the amount of parking spots increases
ggplot(training, aes(x = factor(parking), y = price, colour = factor(parking))) +
  geom_boxplot()

# It seems as if more than 4 are one category on itself
training$prk <- ifelse(training$parking >= 4, "4 or more", training$parking) %>%
  factor(ordered = is.ordered(.))
summary(training$prk)
prk <- training$prk
ggplot(training, aes(x = prk, y = price, colour = prk)) +
  geom_boxplot()
```

```{r}
# Viewing the effect of status
ggplot(training, aes(x = , status, y = price, colour = status)) + geom_boxplot()

training$status <- as.factor(training$status)

summary(training$status)

ggplot(training, aes(x = status, y = price, colour = status)) + geom_boxplot()
```

```{r}
ggplot(training, aes(y = price, colour = gimnasio)) + geom_boxplot()

# Viewing gimnasio
t.test(price ~ gimnasio, data = training)
```

```{r}
# Viewing bedrooms
ggplot(training, aes(x = factor(bedrooms), y = price, colour = factor(bedrooms))) +
  geom_boxplot()

training$bdrm <- ifelse(training$bedrooms >= 4, "4 or more", training$bedrooms) %>%
  factor(ordered = is.ordered(.))
summary(training$bdrm)

bdrm <- training$bdrm

ggplot(training, aes(x = bdrm, y = price, colour = bdrm)) + geom_boxplot()
```

## Transforming Price and Area

```{r}
b_price <- MASS::boxcox(lm(price ~ 1, data = training))
lambda_price <- b_price$x[which.max(b_price$y)]
training$price_bc <- (training$price ^ lambda_price - 1) / lambda_price
shapiro.test(training$price_bc)
hist(training$price_bc)

b_area <- MASS::boxcox(lm(area ~ 1, data = training))
lambda_area <- b_price$x[which.max(b_price$y)]
training$area_bc <- (training$area ^ lambda_area - 1) / lambda_area
shapiro.test(training$area_bc)
hist(training$area_bc)
plot(training$area_per_br, training$price_bc)
fit <- lm(log(price) ~ log(area), data = training)
summary(fit)
gvlma::gvlma(fit)
plot(training$area_bc, training$price_bc)
fit2 <- lm(price_bc ~ area_bc * bedrooms + parking, data = training)
summary(fit2)
gvlma::gvlma(fit2)
```
