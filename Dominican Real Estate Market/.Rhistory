shapiro.test(log(train_final$price))
train.scaled <- train %>%
mutate(area = round(area, -2)) %>%
select(bedrooms, location2, price, area) %>%
scale
train$cluster <- kmeans(as.matrix(train.scaled), 1400, nstart = 50)$cluster
train_final <- train %>%
group_by(cluster) %>%
summarise(parking = median(parking),
bathrooms = median(bathrooms),
bedrooms = median(bedrooms),
price = mean(price),
area = mean(area))
ggplot(train_final, aes(log(price))) +
geom_histogram()
shapiro.test(log(train_final$price))
train$cluster <- kmeans(as.matrix(train.scaled), 1200, nstart = 50)$cluster
train_final <- train %>%
group_by(cluster) %>%
summarise(parking = median(parking),
bathrooms = median(bathrooms),
bedrooms = median(bedrooms),
price = mean(price),
area = mean(area))
ggplot(train_final, aes(log(price))) +
geom_histogram()
shapiro.test(log(train_final$price))
train$cluster <- kmeans(as.matrix(train.scaled), 900, nstart = 50)$cluster
train_final <- train %>%
group_by(cluster) %>%
summarise(parking = median(parking),
bathrooms = median(bathrooms),
bedrooms = median(bedrooms),
price = mean(price),
area = mean(area))
shapiro.test(log(train_final$price))
hist(log(train_final$price))
ggplot(train_final, aes(log(price))) +
geom_histogram()
train.scaled <- train %>%
mutate(area = round(area, -2)) %>%
select(bedrooms, location2, price, area) %>%
scale
train$cluster <- kmeans(as.matrix(train.scaled), 800, nstart = 50)$cluster
train_final <- train %>%
group_by(cluster) %>%
summarise(parking = median(parking),
bathrooms = median(bathrooms),
bedrooms = median(bedrooms),
price = mean(price),
area = mean(area))
shapiro.test(log(train_final$price))
ggplot(train_final, aes(log(price))) +
geom_histogram()
train$cluster <- kmeans(as.matrix(train.scaled), 900, nstart = 50)$cluster
train_final <- train %>%
group_by(cluster) %>%
summarise(parking = median(parking),
bathrooms = median(bathrooms),
bedrooms = median(bedrooms),
price = mean(price),
area = mean(area))
shapiro.test(log(train_final$price))
ggplot(train_final, aes(log(price))) +
geom_histogram()
train$cluster <- kmeans(as.matrix(train.scaled), 500, nstart = 50)$cluster
train$cluster <- kmeans(as.matrix(train.scaled), 500, nstart = 50)$cluster
train_final <- train %>%
group_by(cluster) %>%
summarise(parking = median(parking),
bathrooms = median(bathrooms),
bedrooms = median(bedrooms),
price = mean(price),
area = mean(area))
shapiro.test(log(train_final$price))
ggplot(train_final, aes(log(price))) +
geom_histogram()
train$cluster <- kmeans(as.matrix(train.scaled), 600, nstart = 50)$cluster
train_final <- train %>%
group_by(cluster) %>%
summarise(parking = median(parking),
bathrooms = median(bathrooms),
bedrooms = median(bedrooms),
price = mean(price),
area = mean(area))
shapiro.test(log(train_final$price))
ggplot(train_final, aes(log(price))) +
geom_histogram()
train$cluster <- kmeans(as.matrix(train.scaled), 600, nstart = 50)$cluster
train_final <- train %>%
group_by(cluster) %>%
summarise(parking = median(parking),
bathrooms = median(bathrooms),
bedrooms = median(bedrooms),
price = mean(price),
area = mean(area))
shapiro.test(log(train_final$price))
ggplot(train_final, aes(log(price))) +
geom_histogram()
train$cluster <- kmeans(as.matrix(train.scaled), 700, nstart = 50)$cluster
train_final <- train %>%
group_by(cluster) %>%
summarise(parking = median(parking),
bathrooms = median(bathrooms),
bedrooms = median(bedrooms),
price = mean(price),
area = mean(area))
shapiro.test(log(train_final$price))
ggplot(train_final, aes(log(price))) +
geom_histogram()
train$cluster <- kmeans(as.matrix(train.scaled), 600, nstart = 50)$cluster
train$cluster <- kmeans(as.matrix(train.scaled), 600, nstart = 50)$cluster
train.scaled <- train %>%
#mutate(area = round(area, -2)) %>%
select(bedrooms, location2, price, area) %>%
scale
train$cluster <- kmeans(as.matrix(train.scaled), 600, nstart = 50)$cluster
train_final <- train %>%
group_by(cluster) %>%
summarise(parking = median(parking),
bathrooms = median(bathrooms),
bedrooms = median(bedrooms),
price = mean(price),
area = mean(area))
shapiro.test(log(train_final$price))
ggplot(train_final, aes(log(price))) +
geom_histogram()
train$cluster <- kmeans(as.matrix(train.scaled), 500, nstart = 50)$cluster
train_final <- train %>%
group_by(cluster) %>%
summarise(parking = median(parking),
bathrooms = median(bathrooms),
bedrooms = median(bedrooms),
price = mean(price),
area = mean(area))
shapiro.test(log(train_final$price))
ggplot(train_final, aes(log(price))) +
geom_histogram()
fit.2 <- lm(log(price) ~ log(area), data + train_final)
summary(fit.2)
shapiro.test(residuals(fit.2))
shapiro.test(log(train_final$area))
shapiro.test(log(train_final$price))
fit.2 <- lm(log(price) ~ log(area) + location, data + train_final)
fit.2 <- lm(log(price) ~ log(area) + parking + bedrooms, data + train_final)
fit.2 <- lm(log(price) ~ log(area) + parking + bedrooms, data = train_final)
summary(fit.2)
shapiro.test(residuals(fit.2))
fit.2 <- lm(log(price) ~ log(area), data = train_final)
summary(fit.2)
shapiro.test(residuals(fit.2))
plot(fit.2)
ggplot(train_final, aes(log(area))) +
geom_histogram()
ggplot(train_final, aes(log(price))) +
geom_histogram()
train.scaled <- train %>%
mutate(area = round(area, -1)) %>%
select(bedrooms, location2, price, area) %>%
scale
train$cluster <- kmeans(as.matrix(train.scaled), 500, nstart = 50)$cluster
train_final <- train %>%
group_by(cluster) %>%
summarise(parking = median(parking),
bathrooms = median(bathrooms),
bedrooms = median(bedrooms),
price = mean(price),
area = mean(area))
shapiro.test(log(train_final$price))
shapiro.test(log(train_final$area))
ggplot(train_final, aes(log(price))) +
geom_histogram()
ggplot(train_final, aes(log(area))) +
geom_histogram()
fit.2 <- lm(log(price) ~ log(area), data = train_final)
summary(fit.2)
shapiro.test(residuals(fit.2))
shapiro.test(log(train_final$price))
View(train)
training <- read_csv("../../1_Data Cleaning/1_data/training_set.csv") %>%
select(id, parking, bathrooms, bedrooms, location, status, price, area) %>%
filter(complete.cases(.),
location %in% c("Bella Vista Sur", "Bella Vista", "Bella Vista Norte"))
training
hist(training$price)
ggplot(training, aes(price)) + geom_histogram()
shapiro.test(log(training$price))
shapiro.test(log(training[training$status == "New", 'price']))
shapiro.test(log(training[training$status == "New", "price"]))
training[training$status == "New", "price"]
training[training$status == "New",]$price
hist(log(training[training$status == "New",]$price))
shapiro.test(log(training[training$status == "New",]$price))
summary(training$price)
ggplot(training, aes(price)) + geom_histogram()
ggplot(training, aes(log(price))) + geom_histogram()
setwd("c:/Users/Augus/OneDrive/Desktop")
setwd("c:/Users/Augus/OneDrive/Desktop/")
library(readr)
Bella_Vista <- read_csv("C:/Users/Augus/OneDrive/Escritorio/Bella Vista.csv")
View(Bella_Vista)
library(readr)
library(tidyverse)
bella <- Bella_Vista %>%
group_by(...27) %>%
summarise(price = mean(price.usd))
ggplot(bella, aes(price)) + geom_histogram()
ggplot(bella, aes(log(price))) + geom_histogram()
shapiro.test(log(bella$price))
options(scipen = 999)
shapiro.test(log(bella$price))
shapiro.test(bella$price)
summary(bella$price)
bella <- filter(bella, price > 70000)
bella
ggplot(bella, aes(log(price))) + geom_histogram()
shapiro.test(bella$price)
qqplot(bella$price)
View(bella)
bella <- filter(bella, `...27` <= 71)
ggplot(bella, aes(log(price))) + geom_histogram()
shapiro.test(bella$price)
shapiro.test(log(Bella_Vista$price.usd))
summary(Bella_Vista$price.usd)
bella$new = rnorm(nrow(bella), mean = 267950)
shapiro.test(bella$new)
summary(log(Bella_Vista$price.usd))
bella$new = rnorm(nrow(bella), mean = 12.5)
shapiro.test(bella$new)
sd(Bella_Vista$price.usd)
sd(log(Bella_Vista$price.usd))
log(sd(Bella_Vista$price.usd))
bella$new = rnorm(nrow(bella), mean = 12.5, sd = 0.8271094)
shapiro.test(bella$new)
Bella_Vista <- filter(Bella_Vista, price.usd > 70000)
Bella_Vista
Bella_Vista %>% filter(price.usd <= 228000) %>% summarise(price.usd = mean(price.usd))
Bella_Vista %>% filter(price.usd <= 228000) %>% group_by(`...27`) %>% summarise(price = mean(price.usd))
Bella_Vista %>% filter(price.usd <= 228000) %>% group_by(`...27`) %>% summarise(price = mean(price.usd)) %>% ungroup() %>% summarise(price = mean(price))
ggplot(Bella_Vista, aes(price.usd))
ggplot(Bella_Vista, aes(price.usd)) + geom_histogram()
ggplot(Bella_Vista, aes(log(price.usd))) + geom_histogram()
bella <- Bella_Vista %>%
group_by(`...27`) %>%
summarise(price.usd = median(price.usd))
ggplot(bella, aes(log(price.usd))) + geom_histogram()
log(228000)
rm(list = ls())
getwd()
options(scipen = 999)
library(robustbase)
library(tidyverse)
library(caret)
set.seed(1234)
path <- "../../0_Data Collection/1_data/0_raw/housing price/"
housing_files <- list.files(path)
housing <- read_csv(paste0(path, housing_files))
housing <- housing %>%
filter(date ==  "2022-08-02",
usage == "Residencial",
province %in% c("Santo Domingo", "Santo Domingo Centro (D.N.)")) %>%
rename(location = neighborhood) %>%
select(-c(date, usage, city, province))
inTrain <- createDataPartition(housing$price.usd, p = 0.7, list = FALSE)
training <- housing[inTrain, ]
testing <- housing[-inTrain, ]
dim(housing)
dim(training)
dim(testing)
glimpse(training)
training <- training %>%
select(-c(currency, price)) %>%
rename(price = price.usd)
apply(training, 2,
\(x) {
n <- length(x)
na <- x %>%
is.na() %>%
sum()
prop.na <- na / n * 100
})
training <- training %>%
select(-c(story))
summary(training)
training %>%
arrange(desc(area)) %>%
head(10)
head(10)
training
training %>% arrange(desc(area))
training %>% arrange(desc(area)) %>% head
training %>% arrange(desc(area)) %>% head(10)
training <- training %>%
filter(id != "/apartamentos-venta-cuesta-hermosa-ii/1236477/",
id != "/apartamentos-venta-los-cacicazgos/1272251/") %>%
mutate(area = ifelse(area > 10000, area / 1000, area)) %>%
unique()
summary(training$price)
ggplot(training, aes(price)) +
geom_histogram()
summary(training$area)
ggplot(training, aes(area)) +
geom_histogram()
training <- training %>%
mutate(price_per_m2 = price / area,
area_per_br = area / bedrooms)
summary(training$price_per_m2)
ggplot(training, aes(price_per_m2)) +
geom_histogram()
training %>%
filter(price_per_m2 < 1864) %>%
ggplot(aes(price)) +
geom_histogram()
rm(list = ls())
getwd()
options(scipen = 999)
library(robustbase)
library(tidyverse)
library(caret)
set.seed(1234)
path <- "../../0_Data Collection/1_data/0_raw/housing price/"
housing_files <- list.files(path)
housing <- read_csv(paste0(path, housing_files))
housing <- housing %>%
filter(date ==  "2022-08-02",
usage == "Residencial",
province %in% c("Santo Domingo", "Santo Domingo Centro (D.N.)")) %>%
rename(location = neighborhood) %>%
select(-c(date, usage, city, province))
inTrain <- createDataPartition(housing$price.usd, p = 0.7, list = FALSE)
training <- housing[inTrain, ]
testing <- housing[-inTrain, ]
dim(housing)
dim(training)
dim(testing)
glimpse(training)
training <- training %>%
select(-c(currency, price)) %>%
rename(price = price.usd)
apply(training, 2,
\(x) {
n <- length(x)
na <- x %>%
is.na() %>%
sum()
prop.na <- na / n * 100
})
training <- training %>%
select(-c(story))
summary(training)
training %>%
arrange(desc(area)) %>%
head(10)
training <- training %>%
filter(id != "/apartamentos-venta-cuesta-hermosa-ii/1236477/",
id != "/apartamentos-venta-los-cacicazgos/1272251/") %>%
mutate(area = ifelse(area > 10000, area / 1000, area)) %>%
unique()
summary(training$price)
ggplot(training, aes(price)) +
geom_histogram()
summary(training$area)
ggplot(training, aes(area)) +
geom_histogram()
training <- training %>%
mutate(price_per_m2 = price / area,
area_per_br = area / bedrooms)
summary(training$price_per_m2)
ggplot(training, aes(price_per_m2)) +
geom_histogram()
training %>%
filter(price_per_m2 < 1864) %>%
ggplot(aes(price)) +
geom_histogram()
(cutoff <- adjboxStats(training$price_per_m2)$fence)
training <- training %>%
filter(between(price_per_m2, cutoff[1], cutoff[2]))
summary(training$price_per_m2)
ggplot(training, aes(price)) +
geom_histogram()
summary(training$area_per_br)
(cutoff <- adjboxStats(training$area_per_br)$fence)
training <- training %>%
filter(between(area_per_br, cutoff[1], cutoff[2]))
summary(training$area_per_br)
training <- training %>%
mutate(status = case_when(status == "En Planos" ~ "In blueprint",
status == "En Construcción" ~ "Building",
status == "Nueva" ~ "New",
status == "Remodelada" ~ "Rebuilt",
status == "A Remodelar" ~ "Rebuilding",
status == "Segundo Uso" ~ "Used",
status == "Fideicomiso" ~ "Trust",
TRUE ~ status),
status = factor(status, levels = c("In blueprint", "Building",
"New", "Rebuilt", "Rebuilding",
"Used", "Other")))
training[training$status == "Trust" & !is.na(training$status), ]
training <- training %>%
filter(status != "Trust")
glimpse(training)
write_csv(training, "../1_data/training_set.csv")
summary(training)
rm(list = ls())
library(tidyverse)
library(class)
library(caret)
training <- read_csv("../../1_Data Cleaning/1_data/training_set.csv") %>%
select(id, parking, bathrooms, bedrooms, location, status, price, area) %>%
filter(complete.cases(.),
location %in% c("Bella Vista Sur", "Bella Vista", "Bella Vista Norte"))
inTrain <- createDataPartition(training$location, p = 0.7, list = FALSE)
inTrain <- createDataPartition(training$location, p = 0.7, list = FALSE)
train <- training[inTrain, ]
test <- training[-inTrain, ]
library(robustbase)
library(tidyverse)
library(lmtest)
library(e1071)
library(MASS)
trn <- training %>%
select(price.usd, area, neighborhood, status, parking, bedrooms, gimnasio, lobby, seller) %>%
na.omit()
training <- read_csv("../../1_Data Cleaning/1_data/training_set.csv") %>%
select(id, parking, bathrooms, bedrooms, location, status, price, area,
gimnasio, lobby, seller) %>%
filter(complete.cases(.),
location %in% c("Bella Vista Sur", "Bella Vista", "Bella Vista Norte"))
training <- read_csv("../../1_Data Cleaning/1_data/training_set.csv")
training <- read_csv("../../1_Data Cleaning/1_data/training_set.csv") %>%
select(id, parking, bathrooms, bedrooms, location, status, price, area,
gimnasio, lobby, seller)
training <- read_csv("../../1_Data Cleaning/1_data/training_set.csv") %>%
select(id, parking, bathrooms, bedrooms, location, status, price, area) %>%
filter(complete.cases(.),
location %in% c("Bella Vista Sur", "Bella Vista", "Bella Vista Norte"))
training <- read_csv("../../1_Data Cleaning/1_data/training_set.csv") %>%
select(id, parking, bathrooms, bedrooms, location, status, price) %>%
filter(complete.cases(.),
location %in% c("Bella Vista Sur", "Bella Vista", "Bella Vista Norte"))
library(tidyverse)
training <- read_csv("../../1_Data Cleaning/1_data/training_set.csv") %>%
select(id, parking, bathrooms, bedrooms, location, status, price, area,
gimnasio, lobby, seller) %>%
filter(complete.cases(.),
location %in% c("Bella Vista Sur", "Bella Vista", "Bella Vista Norte"))
training <- read_csv("../../1_Data Cleaning/1_data/training_set.csv")
training %>%
select(id, parking, bathrooms, bedrooms, location, status, price, area,
gimnasio, lobby, seller)
training %>% select(id)
training
select(training, id)
?select
select(training, "id")
rm(list = ls())
library(tidyverse)
library(tidyverse)
library(ggResidpanel)
training <- read_csv("../../1_Data Cleaning/1_data/training_set.csv") %>%
filter(location %in% c("Bella Vista", "Bella Vista Norte", "Bella Vista Sur")) %>%
mutate(logPrice = log(price),
logArea = log(area),
location = case_when(location == "Bella Vista Norte" ~ "Bella Vista",
location == "Bella Vista Sur" ~ "Bella Vista",
TRUE ~ location)) %>%
na.omit()
unique(training$location)
model <- lm(logPrice ~ area + I(log(area_per_br)) + as.factor(status) + I(parking / bedrooms), data = training)
shapiro.test(residuals(model))
summary(model)
gvlma::gvlma(model)
summary(model)
exp(0.2156)
ln(0.2156)
log(0.2156)
ln(0.2156)
exp(0.2156)
ggplot(training, aes(y = logPrice, x = area)) + geom_point()
ggplot(training, aes(y = logPrice, x = area/bedrooms)) + geom_point()
model <- lm(logPrice ~ area + I(area^2) + I(log(area_per_br)) + as.factor(status) + I(parking / bedrooms), data = training)
shapiro.test(residuals(model))
summary(model)
gvlma::gvlma(model)
model <- lm(logPrice ~ area + I(area^2) + bedrooms + as.factor(status) + I(parking / bedrooms), data = training)
shapiro.test(residuals(model))
summary(model)
gvlma::gvlma(model)
model <- lm(logPrice ~ area + bedrooms + as.factor(status) + I(parking / bedrooms), data = training)
shapiro.test(residuals(model))
summary(model)
gvlma::gvlma(model)
model <- lm(logPrice ~ area + I(log(area_per_br)) + as.factor(status) + I(parking / bedrooms), data = training)
shapiro.test(residuals(model))
summary(model)
gvlma::gvlma(model)
model <- lm(logPrice ~ area + area_per_br + as.factor(status) + I(parking / bedrooms), data = training)
shapiro.test(residuals(model))
summary(model)
gvlma::gvlma(model)
model <- lm(logPrice ~ logArea + area_per_br + as.factor(status) + I(parking / bedrooms), data = training)
shapiro.test(residuals(model))
summary(model)
gvlma::gvlma(model)
model <- lm(logPrice ~ area + area_per_br + as.factor(status) + I(parking / bedrooms) + I(bedrooms / bathrooms), data = training)
shapiro.test(residuals(model))
summary(model)
gvlma::gvlma(model)
predict(model)
exp(predict(model))
training$yhat <- exp(predict(model))
View(training)
