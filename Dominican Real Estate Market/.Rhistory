usage == "Residencial",
province %in% c("Santo Domingo", "Santo Domingo Centro (D.N.)")) %>%
rename(location = neighborhood) %>%
select(-c(date, usage, city, province))
inTrain <- createDataPartition(housing$price.usd, p = 0.7, list = FALSE)
training <- housing[inTrain, ]
testing <- housing[-inTrain, ]
dim(housing)
dim(training)
dim(testing)
glimpse(training)
training <- training %>%
select(-c(currency, price)) %>%
rename(price = price.usd)
apply(training, 2,
\(x) {
n <- length(x)
na <- x %>%
is.na() %>%
sum()
prop.na <- na / n * 100
})
training <- training %>%
select(-c(story))
summary(training)
training %>%
arrange(desc(area)) %>%
head(10)
training <- training %>%
filter(id != "/apartamentos-venta-cuesta-hermosa-ii/1236477/",
id != "/apartamentos-venta-los-cacicazgos/1272251/") %>%
mutate(area = ifelse(area > 10000, area / 1000, area)) %>%
unique()
summary(training$price)
ggplot(training, aes(price)) +
geom_histogram()
summary(training$area)
ggplot(training, aes(area)) +
geom_histogram()
training <- training %>%
mutate(price_per_m2 = price / area,
area_per_br = area / bedrooms)
summary(training$price_per_m2)
ggplot(training, aes(price_per_m2)) +
geom_histogram()
training %>%
filter(price_per_m2 < 1864) %>%
ggplot(aes(price)) +
geom_histogram()
(cutoff <- adjboxStats(training$price_per_m2)$fence)
training <- training %>%
filter(between(price_per_m2, cutoff[1], cutoff[2]))
summary(training$price_per_m2)
ggplot(training, aes(price)) +
geom_histogram()
(cutoff <- adjboxStats(training$area_per_br)$fence)
training <- training %>%
filter(between(area_per_br, cutoff[1], cutoff[2]))
summary(training$area_per_br)
summary(training$area_per_br)
(cutoff <- adjboxStats(training$area_per_br)$fence)
training <- training %>%
filter(between(area_per_br, cutoff[1], cutoff[2]))
summary(training$area_per_br)
rm(list = ls())
options(scipen = 999)
library(robustbase)
library(tidyverse)
library(caret)
set.seed(1234)
path <- "../1_data/0_raw/housing price/"
housing_files <- list.files(path)
housing <- read_csv(paste0(path, housing_files))
housing <- housing %>%
filter(date ==  "2022-03-22",
usage == "Residencial",
province %in% c("Santo Domingo", "Santo Domingo Centro (D.N.)")) %>%
rename(location = neighborhood) %>%
select(-c(date, usage, city, province))
inTrain <- createDataPartition(housing$price.usd, p = 0.7, list = FALSE)
training <- housing[inTrain, ]
testing <- housing[-inTrain, ]
dim(housing)
dim(training)
dim(testing)
glimpse(training)
training <- training %>%
select(-c(currency, price)) %>%
rename(price = price.usd)
apply(training, 2,
\(x) {
n <- length(x)
na <- x %>%
is.na() %>%
sum()
prop.na <- na / n * 100
})
training <- training %>%
select(-c(story))
summary(training)
training %>%
arrange(desc(area)) %>%
head(10)
training <- training %>%
filter(id != "/apartamentos-venta-cuesta-hermosa-ii/1236477/",
id != "/apartamentos-venta-los-cacicazgos/1272251/") %>%
mutate(area = ifelse(area > 10000, area / 1000, area)) %>%
unique()
summary(training$price)
ggplot(training, aes(price)) +
geom_histogram()
summary(training$area)
ggplot(training, aes(area)) +
geom_histogram()
training <- training %>%
mutate(price_per_m2 = price / area,
area_per_br = area / bedrooms)
summary(training$price_per_m2)
ggplot(training, aes(price_per_m2)) +
geom_histogram()
training %>%
filter(price_per_m2 < 1864) %>%
ggplot(aes(price)) +
geom_histogram()
(cutoff <- adjboxStats(training$price_per_m2)$fence)
training <- training %>%
filter(between(price_per_m2, cutoff[1], cutoff[2]))
summary(training$price_per_m2)
ggplot(training, aes(price)) +
geom_histogram()
summary(training$area_per_br)
(cutoff <- adjboxStats(training$area_per_br)$fence)
training <- training %>%
filter(between(area_per_br, cutoff[1], cutoff[2]))
summary(training$area_per_br)
glimpse(training)
glimpse(training)
summary(training)
training <- training %>%
na.omit()
nonOutlier <- adjOutlyingness(training)
nonOutlier <- adjOutlyingness(training)
nonOutlier <- nonOutlier$nonOut
training <- training[nonOutlier, ]
glimpse(training)
summary(training)
rm(list = ls())
options(scipen = 999)
library(robustbase)
library(tidyverse)
library(caret)
set.seed(1234)
path <- "../1_data/0_raw/housing price/"
housing_files <- list.files(path)
housing <- read_csv(paste0(path, housing_files))
housing <- housing %>%
filter(date ==  "2022-03-22",
usage == "Residencial",
province %in% c("Santo Domingo", "Santo Domingo Centro (D.N.)")) %>%
rename(location = neighborhood) %>%
select(-c(date, usage, city, province))
inTrain <- createDataPartition(housing$price.usd, p = 0.7, list = FALSE)
training <- housing[inTrain, ]
testing <- housing[-inTrain, ]
dim(housing)
dim(training)
dim(testing)
glimpse(training)
training <- training %>%
select(-c(currency, price)) %>%
rename(price = price.usd)
apply(training, 2,
\(x) {
n <- length(x)
na <- x %>%
is.na() %>%
sum()
prop.na <- na / n * 100
})
training <- training %>%
select(-c(story))
summary(training)
training %>%
arrange(desc(area)) %>%
head(10)
training <- training %>%
filter(id != "/apartamentos-venta-cuesta-hermosa-ii/1236477/",
id != "/apartamentos-venta-los-cacicazgos/1272251/") %>%
mutate(area = ifelse(area > 10000, area / 1000, area)) %>%
unique()
summary(training$price)
ggplot(training, aes(price)) +
geom_histogram()
summary(training$area)
ggplot(training, aes(area)) +
geom_histogram()
training <- training %>%
mutate(price_per_m2 = price / area,
area_per_br = area / bedrooms)
summary(training$price_per_m2)
ggplot(training, aes(price_per_m2)) +
geom_histogram()
training %>%
filter(price_per_m2 < 1864) %>%
ggplot(aes(price)) +
geom_histogram()
(cutoff <- adjboxStats(training$price_per_m2)$fence)
training <- training %>%
filter(between(price_per_m2, cutoff[1], cutoff[2]))
summary(training$price_per_m2)
ggplot(training, aes(price)) +
geom_histogram()
summary(training$area_per_br)
(cutoff <- adjboxStats(training$area_per_br)$fence)
training <- training %>%
filter(between(area_per_br, cutoff[1], cutoff[2]))
summary(training$area_per_br)
glimpse(training)
unique(training$status)
training <- training %>%
mutate(status = case_when(status == "En planos" ~ "In blueprint",
status == "En Construcci贸n" ~ "Building",
status == "Nueva" ~ "New",
status == "Remodelada" ~ "Rebuilt",
status == "A remodelar" ~ "Rebuilding",
status == "Segundo uso" ~ "Used",
status == "Fideicomiso" ~ "Other"))
unique(training$status)
rm(list = ls())
options(scipen = 999)
library(robustbase)
library(tidyverse)
library(caret)
set.seed(1234)
path <- "../1_data/0_raw/housing price/"
housing_files <- list.files(path)
housing <- read_csv(paste0(path, housing_files))
housing <- housing %>%
filter(date ==  "2022-03-22",
usage == "Residencial",
province %in% c("Santo Domingo", "Santo Domingo Centro (D.N.)")) %>%
rename(location = neighborhood) %>%
select(-c(date, usage, city, province))
inTrain <- createDataPartition(housing$price.usd, p = 0.7, list = FALSE)
training <- housing[inTrain, ]
testing <- housing[-inTrain, ]
dim(housing)
dim(training)
dim(testing)
glimpse(training)
training <- training %>%
select(-c(currency, price)) %>%
rename(price = price.usd)
apply(training, 2,
\(x) {
n <- length(x)
na <- x %>%
is.na() %>%
sum()
prop.na <- na / n * 100
})
training <- training %>%
select(-c(story))
summary(training)
training %>%
arrange(desc(area)) %>%
head(10)
training <- training %>%
filter(id != "/apartamentos-venta-cuesta-hermosa-ii/1236477/",
id != "/apartamentos-venta-los-cacicazgos/1272251/") %>%
mutate(area = ifelse(area > 10000, area / 1000, area)) %>%
unique()
summary(training$price)
ggplot(training, aes(price)) +
geom_histogram()
summary(training$area)
ggplot(training, aes(area)) +
geom_histogram()
training <- training %>%
mutate(price_per_m2 = price / area,
area_per_br = area / bedrooms)
summary(training$price_per_m2)
ggplot(training, aes(price_per_m2)) +
geom_histogram()
training %>%
filter(price_per_m2 < 1864) %>%
ggplot(aes(price)) +
geom_histogram()
(cutoff <- adjboxStats(training$price_per_m2)$fence)
training <- training %>%
filter(between(price_per_m2, cutoff[1], cutoff[2]))
summary(training$price_per_m2)
ggplot(training, aes(price)) +
geom_histogram()
summary(training$area_per_br)
(cutoff <- adjboxStats(training$area_per_br)$fence)
training <- training %>%
filter(between(area_per_br, cutoff[1], cutoff[2]))
summary(training$area_per_br)
glimpse(training)
unique(training$status)
training2 <- training %>%
mutate(status = case_when(status == "En Planos" ~ "In blueprint",
status == "En Construcci贸n" ~ "Building",
status == "Nueva" ~ "New",
status == "Remodelada" ~ "Rebuilt",
status == "A remodelar" ~ "Rebuilding",
status == "Segundo uso" ~ "Used",
status == "Fideicomiso" ~ "Other",
TRUE ~ status))
unique(training2$status)
training2 <- training %>%
mutate(status = case_when(status == "En Planos" ~ "In blueprint",
status == "En Construcci贸n" ~ "Building",
status == "Nueva" ~ "New",
status == "Remodelada" ~ "Rebuilt",
status == "A Remodelar" ~ "Rebuilding",
status == "Segundo Uso" ~ "Used",
status == "Fideicomiso" ~ "Other",
TRUE ~ status))
unique(training2$status)
training <- training %>%
mutate(status = case_when(status == "En Planos" ~ "In blueprint",
status == "En Construcci贸n" ~ "Building",
status == "Nueva" ~ "New",
status == "Remodelada" ~ "Rebuilt",
status == "A Remodelar" ~ "Rebuilding",
status == "Segundo Uso" ~ "Used",
status == "Fideicomiso" ~ "Other",
TRUE ~ status),
status = factor(status, levels = c("In blueprint", "Building",
"New", "Rebuilt", "Rebuilding",
"Used", "Other")))
summary(training)
training[training$status == "Other",]
training$status == "Other"
training[training$status == "Other" & !is.na(training$status), ]
rm(list = ls())
options(scipen = 999)
library(robustbase)
library(tidyverse)
library(caret)
set.seed(1234)
path <- "../1_data/0_raw/housing price/"
housing_files <- list.files(path)
housing <- read_csv(paste0(path, housing_files))
housing <- housing %>%
filter(date ==  "2022-03-22",
usage == "Residencial",
province %in% c("Santo Domingo", "Santo Domingo Centro (D.N.)")) %>%
rename(location = neighborhood) %>%
select(-c(date, usage, city, province))
inTrain <- createDataPartition(housing$price.usd, p = 0.7, list = FALSE)
training <- housing[inTrain, ]
testing <- housing[-inTrain, ]
dim(housing)
dim(training)
dim(testing)
glimpse(training)
training <- training %>%
select(-c(currency, price)) %>%
rename(price = price.usd)
apply(training, 2,
\(x) {
n <- length(x)
na <- x %>%
is.na() %>%
sum()
prop.na <- na / n * 100
})
training <- training %>%
select(-c(story))
summary(training)
training %>%
arrange(desc(area)) %>%
head(10)
training <- training %>%
filter(id != "/apartamentos-venta-cuesta-hermosa-ii/1236477/",
id != "/apartamentos-venta-los-cacicazgos/1272251/") %>%
mutate(area = ifelse(area > 10000, area / 1000, area)) %>%
unique()
summary(training$price)
ggplot(training, aes(price)) +
geom_histogram()
summary(training$area)
ggplot(training, aes(area)) +
geom_histogram()
training <- training %>%
mutate(price_per_m2 = price / area,
area_per_br = area / bedrooms)
summary(training$price_per_m2)
ggplot(training, aes(price_per_m2)) +
geom_histogram()
training %>%
filter(price_per_m2 < 1864) %>%
ggplot(aes(price)) +
geom_histogram()
(cutoff <- adjboxStats(training$price_per_m2)$fence)
training <- training %>%
filter(between(price_per_m2, cutoff[1], cutoff[2]))
summary(training$price_per_m2)
ggplot(training, aes(price)) +
geom_histogram()
summary(training$area_per_br)
(cutoff <- adjboxStats(training$area_per_br)$fence)
training <- training %>%
filter(between(area_per_br, cutoff[1], cutoff[2]))
summary(training$area_per_br)
glimpse(training)
training <- training %>%
mutate(status = case_when(status == "En Planos" ~ "In blueprint",
status == "En Construcci贸n" ~ "Building",
status == "Nueva" ~ "New",
status == "Remodelada" ~ "Rebuilt",
status == "A Remodelar" ~ "Rebuilding",
status == "Segundo Uso" ~ "Used",
status == "Fideicomiso" ~ "Trust",
TRUE ~ status),
status = factor(status, levels = c("In blueprint", "Building",
"New", "Rebuilt", "Rebuilding",
"Used", "Other")))
training[training$status == "Trust" & !is.na(training$status), ]
Training <- training %>%
filter(status != "Trust")
summary(training$status)
rm(list = ls())
options(scipen = 999)
library(robustbase)
library(tidyverse)
library(caret)
set.seed(1234)
path <- "../1_data/0_raw/housing price/"
housing_files <- list.files(path)
housing <- read_csv(paste0(path, housing_files))
housing <- housing %>%
filter(date ==  "2022-03-22",
usage == "Residencial",
province %in% c("Santo Domingo", "Santo Domingo Centro (D.N.)")) %>%
rename(location = neighborhood) %>%
select(-c(date, usage, city, province))
inTrain <- createDataPartition(housing$price.usd, p = 0.7, list = FALSE)
training <- housing[inTrain, ]
testing <- housing[-inTrain, ]
dim(housing)
dim(training)
dim(testing)
glimpse(training)
training <- training %>%
select(-c(currency, price)) %>%
rename(price = price.usd)
apply(training, 2,
\(x) {
n <- length(x)
na <- x %>%
is.na() %>%
sum()
prop.na <- na / n * 100
})
training <- training %>%
select(-c(story))
summary(training)
training %>%
arrange(desc(area)) %>%
head(10)
training <- training %>%
filter(id != "/apartamentos-venta-cuesta-hermosa-ii/1236477/",
id != "/apartamentos-venta-los-cacicazgos/1272251/") %>%
mutate(area = ifelse(area > 10000, area / 1000, area)) %>%
unique()
summary(training$price)
ggplot(training, aes(price)) +
geom_histogram()
summary(training$area)
ggplot(training, aes(area)) +
geom_histogram()
training <- training %>%
mutate(price_per_m2 = price / area,
area_per_br = area / bedrooms)
summary(training$price_per_m2)
ggplot(training, aes(price_per_m2)) +
geom_histogram()
training %>%
filter(price_per_m2 < 1864) %>%
ggplot(aes(price)) +
geom_histogram()
(cutoff <- adjboxStats(training$price_per_m2)$fence)
training <- training %>%
filter(between(price_per_m2, cutoff[1], cutoff[2]))
summary(training$price_per_m2)
ggplot(training, aes(price)) +
geom_histogram()
summary(training$area_per_br)
(cutoff <- adjboxStats(training$area_per_br)$fence)
training <- training %>%
filter(between(area_per_br, cutoff[1], cutoff[2]))
summary(training$area_per_br)
training <- training %>%
mutate(status = case_when(status == "En Planos" ~ "In blueprint",
status == "En Construcci贸n" ~ "Building",
status == "Nueva" ~ "New",
status == "Remodelada" ~ "Rebuilt",
status == "A Remodelar" ~ "Rebuilding",
status == "Segundo Uso" ~ "Used",
status == "Fideicomiso" ~ "Trust",
TRUE ~ status),
status = factor(status, levels = c("In blueprint", "Building",
"New", "Rebuilt", "Rebuilding",
"Used", "Other")))
training[training$status == "Trust" & !is.na(training$status), ]
Training <- training %>%
filter(status != "Trust")
glimpse(training)
